
import unicodecsv as csv
from cochranenlp.experiments import riskofbias
import json
import uuid
import datetime
from collections import defaultdict
import random

DOMAINS = riskofbias.CORE_DOMAINS[:6]
NO_QUESTIONS = 3 # number of sentences per domain to ask about
ALLOCATIONS_FILE = "allocations.json"
EVALUATOR = "Iain"
INPUT = "test_data.csv"

DOMAIN_DESCRIPTIONS = {}

DOMAIN_DESCRIPTIONS[DOMAINS[0]] = """
Random sequence generation (selection bias): Biased allocation to interventions due to inadequate generation of a randomised 
sequence

There is a low risk of bias if the investigators describe a random component in the sequence 
generation process such as: referring to a random number table, using a computer random number 
generator, coin tossing, shuffling cards or envelopes, throwing dice, drawing of lots, minimization 
(minimization may be implemented without a random element, and this is considered to be equivalent 
to being random). 

There is a high risk of selection bias if the investigators describe a non-random component in the 
sequence generation process, such as: sequence generated by odd or even date of birth, date (or day) of 
admission, hospital or clinic record number; or allocation by judgement of the clinician, preference of 
the participant, results of a laboratory test or a series of tests, or availability of the intervention. 
"""


DOMAIN_DESCRIPTIONS[DOMAINS[1]] = """
Allocation concealment (selection bias): Biased allocation to interventions due to inadequate concealment of allocations prior to 
assignment 

There is a low risk of selection bias if the participants and investigators enrolling participants could not 
foresee assignment because one of the following, or an equivalent method, was used to conceal 
allocation: central allocation (including telephone, web-based and pharmacy-controlled randomization); 
sequentially numbered drug containers of identical appearance; or sequentially numbered, opaque, 
sealed envelopes. 

There is a high risk of bias if participants or investigators enrolling participants could possibly foresee 
assignments and thus introduce selection bias, such as allocation based on: using an open random 
allocation schedule (e.g. a list of random numbers); assignment envelopes were used without 
appropriate safeguards (e.g. if envelopes were unsealed or non-opaque or not sequentially numbered); 
alternation or rotation; date of birth; case record number; or other explicitly unconcealed procedures. 
"""


DOMAIN_DESCRIPTIONS[DOMAINS[2]] = """
Blinding of participants: Bias due to knowledge of the allocated interventions by participants during the study

There is a low risk of performance bias if blinding of participants was ensured and it was unlikely that the 
blinding could have been broken; or if there was no blinding or incomplete blinding, but the review 
authors judge that the outcome is not likely to be influenced by lack of blinding.
"""

DOMAIN_DESCRIPTIONS[DOMAINS[3]] = """
Blinding of personnel/care providers: Bias due to knowledge of the allocated interventions by personnel/care providers during 
the study. 

There is a low risk of performance bias if blinding of personnel was ensured and it was unlikely that the 
blinding could have been broken; or if there was no blinding or incomplete blinding, but the review 
authors judge that the outcome is not likely to be influenced by lack of blinding
"""

DOMAIN_DESCRIPTIONS[DOMAINS[3]] = """
Blinding of personnel/care providers: Bias due to knowledge of the allocated interventions by personnel/care providers during 
the study. 

There is a low risk of performance bias if blinding of personnel was ensured and it was unlikely that the 
blinding could have been broken; or if there was no blinding or incomplete blinding, but the review 
authors judge that the outcome is not likely to be influenced by lack of blinding
"""

DOMAIN_DESCRIPTIONS[DOMAINS[4]] = """
Blinding of outcome assessor: Bias due to knowledge of the allocated interventions by outcome assessor

There is low risk of detection bias if the blinding of the outcome assessment was ensured and it was 
unlikely that the blinding could have been broken; or if there was no blinding or incomplete blinding, but 
the review authors judge that the outcome is not likely to be influenced by lack of blinding.; or: 
- for patient-reported outcomes in which the patient was the outcome assessor (e.g., pain, disability): 
there is a low risk of bias for outcome assessors if there is a low risk of bias for participant blinding.* 
- for outcome criteria that are clinical or therapeutic events that will be determined by the interaction 
between patients and care providers (e.g., co-interventions, length of hospitalization, treatment 
failure), in which the care provider is the outcome assessor: there is a low risk of bias for outcome 
assessors if there is a low risk of bias for care providers.* 
- for outcome criteria that are assessed from data from medical forms: there is a low risk of bias if the 
treatment or adverse effects of the treatment could not be noticed in the extracted data.
"""

DOMAIN_DESCRIPTIONS[DOMAINS[5]] = """
Incomplete outcome data (attrition bias): Attrition bias due to amount, nature or handling of incomplete outcome data

There is a low risk of attrition bias if there were no missing outcome data; reasons for missing outcome 
data were unlikely to be related to the true outcome (for survival data, censoring unlikely to be 
introducing bias); missing outcome data were balanced in numbers, with similar reasons for missing 
data across groups.

For dichotomous outcome data, the proportion of missing outcomes compared 
with the observed event risk was not enough to have a clinically relevant impact on the intervention 
effect estimate; for continuous outcome data, the plausible effect size (difference in means or 
standardized difference in means) among missing outcomes was not enough to have a clinically relevant 
impact on observed effect size, or missing data were imputed using appropriate methods

"""
def main():

	question_data = {domain: defaultdict(list) for domain in DOMAINS}

	# parse data
	with open(INPUT, 'rb') as f:
		reader = csv.DictReader(f)

		for i, row in enumerate(reader):
			row_dom = row.pop("domain")
			if row_dom in DOMAINS:
				pmid = row.pop('pmid')
				question_data[row_dom][pmid].append(row)

	# generate questions

	output = []



	for domain in DOMAINS:

		output.append("::NewPage:: %s - instructions" % domain)
		output.append(DOMAIN_DESCRIPTIONS[domain])

		print

		test_ids = random.sample(question_data[domain].keys(), NO_QUESTIONS)

		for i, uid in enumerate(test_ids):

			for j, row in enumerate(question_data[domain][uid]):

				output.append("::NewPage:: %s - study %d/%d, sentence %d " % (domain, int(i)+1, NO_QUESTIONS, int(j)+1))

				output.append(row['sent_text'].strip())

				output.append("""
				How relevant is the above sentence to the domain, <b>%s</b>?
				() Highly relevant
				() Some relevance
				() Not relevant
				""" % domain)


			# print "study number %s " % i
			# print "\n".join(l['sent_text'].strip() for l in question_data[domain][i])
			# print



	with open("output.txt", "wb") as f:
		f.write("\n\n".join(output))



if __name__ == '__main__':
	main()
